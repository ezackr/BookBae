apply plugin: 'java'
apply plugin: 'war'

war.archiveBaseName = "api"

repositories {
    mavenCentral()
}

sourceSets {
    intTest {}
}

dependencies {
    providedCompile 'jakarta.ws.rs:jakarta.ws.rs-api:3.0.0'
    providedCompile 'jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.1'
    providedCompile 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider:2.13.0'
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    implementation 'com.h2database:h2:2.1.212' //TODO: get a real database driver, not H2
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    testImplementation 'com.h2database:h2:2.1.212'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    intTestImplementation 'com.h2database:h2:2.1.212'
    intTestImplementation 'org.glassfish.main.extras:glassfish-embedded-all:6.2.5'
    intTestImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

test {
    useJUnitPlatform()
}


tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
    dependsOn assemble
    useJUnitPlatform()
}

check.dependsOn integrationTest
